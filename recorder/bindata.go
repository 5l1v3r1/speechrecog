package main

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"strings"
	"os"
	"time"
	"io/ioutil"
	"path"
	"path/filepath"
)

func bindata_read(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindata_file_info struct {
	name string
	size int64
	mode os.FileMode
	modTime time.Time
}

func (fi bindata_file_info) Name() string {
	return fi.name
}
func (fi bindata_file_info) Size() int64 {
	return fi.size
}
func (fi bindata_file_info) Mode() os.FileMode {
	return fi.mode
}
func (fi bindata_file_info) ModTime() time.Time {
	return fi.modTime
}
func (fi bindata_file_info) IsDir() bool {
	return false
}
func (fi bindata_file_info) Sys() interface{} {
	return nil
}

var _assets_index_html = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x94\x54\x4d\x6f\xd4\x30\x10\xbd\xf7\x57\x0c\xbe\x27\xe6\x88\x90\xb3\x08\xa9\x42\x42\xe2\x04\x27\x8e\x5e\x7b\xb6\x71\xf1\xc6\x91\x3d\x69\xbb\x8a\xf2\xdf\x19\xc7\xc9\x36\xa1\x48\xab\x9e\x36\xe3\x37\x1f\xef\x79\x9e\x57\x7d\xb0\xc1\xd0\xa5\x47\x68\xe9\xec\x0f\x77\xaa\xfc\x00\xa8\x16\xb5\xcd\x1f\xfc\x79\x46\xd2\x60\x5a\x1d\x13\x52\x23\x06\x3a\x55\x9f\xc4\x02\x91\x23\x8f\x87\x9f\x68\x42\xb4\x18\x95\x2c\xf1\x5d\x01\xbd\xeb\xfe\x40\x44\xdf\x88\x44\x17\x8f\xa9\x45\x24\x01\x79\x5a\x23\x08\x5f\x48\x9a\x94\x04\xb4\x11\x4f\x8d\x90\x73\x4a\x9d\x4f\x96\xd6\xc9\x44\xd7\x13\xa4\x68\x18\x7d\x4c\xcf\xfa\xa9\x7e\x64\x50\xc9\x02\xfc\x2f\xab\x04\x6f\xd2\x94\x5c\xc5\xa8\x63\xb0\x97\x95\xba\x3e\x7a\x04\x67\x99\x9d\x3e\xf7\x4c\x4f\x80\x41\xef\x53\xaf\x8d\xeb\x1e\x1a\xf1\xb1\xc4\xbd\xb6\x76\x89\x4b\x61\x2e\xcd\x6d\xb6\xa5\x55\x3e\xb8\xe2\x00\xe3\x18\x75\xf7\x80\x50\xff\x2a\xf8\x34\x5d\x21\x45\x11\xbc\x3e\xa2\xaf\x72\xfd\x38\xd6\xdf\xef\xa7\x69\x53\x9a\x33\xec\x81\x3b\x54\x50\xff\xc8\x79\x50\x4d\x13\x4b\x20\xbb\xcd\x19\x47\x77\x82\xfa\x9b\xf3\xb8\x69\x5d\x4a\x37\x21\x1f\xe8\xc1\xba\x00\x26\x74\x14\x83\x4f\x7b\x30\x5f\x5f\x18\xa2\xc1\xe5\xfa\xe2\xbc\x46\x16\x5b\xf3\x65\x7f\x61\x7a\x2b\xbb\x65\x67\x73\x2f\xf9\x52\x31\x2a\xfe\xed\xf4\x9b\x1b\xc1\x31\x86\xe7\x84\x11\x6c\xc0\x04\x5d\xe0\xb5\x0c\x7d\x1f\x22\x01\xb5\x08\x85\x09\x7a\x3c\x63\x47\xf5\x9e\xa5\x9c\xc1\xdd\x25\xbc\x11\x8c\x3e\xdd\x12\x7b\x1c\x88\x42\x07\xc6\xeb\x94\x1a\x51\xe4\x54\xe5\x50\x2c\x26\x55\xb2\xc4\x37\x66\x75\xf6\x5d\xa3\x2c\xcb\x22\xbc\x8e\xba\x9f\xc3\xdb\xa3\x38\x8a\x5b\xd3\x6c\xc7\x32\xb6\x31\xab\x9c\xdd\xba\x04\xd6\x3d\xcd\xe6\x63\x67\x56\x79\xb3\xda\x75\x18\x5f\xdd\x39\xbb\xeb\xf0\xd5\xda\xe2\xb3\xcf\x4a\x96\x93\x15\x77\x5d\x3f\xd0\xae\x01\x2f\xe4\xb5\x7c\x51\xb6\xe2\xab\x26\xee\xb7\x17\xa4\x24\xf3\x28\xcf\xab\x10\xe5\x67\x36\xff\x79\xfc\x0d\x00\x00\xff\xff\xa6\xd5\x93\xb3\x54\x04\x00\x00")

func assets_index_html_bytes() ([]byte, error) {
	return bindata_read(
		_assets_index_html,
		"assets/index.html",
	)
}

func assets_index_html() (*asset, error) {
	bytes, err := assets_index_html_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "assets/index.html", size: 1108, mode: os.FileMode(420), modTime: time.Unix(1468018172, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _assets_jswav_js = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xbc\x5a\x5f\x73\xdb\x36\x12\x7f\xcf\xa7\x40\xf2\x62\x4a\x66\x68\x49\x51\x54\x5f\x75\x7e\x48\x9c\xa6\xcd\xcd\x25\x97\x89\x7b\xcd\x43\xa7\xd3\x81\x48\xd0\xa2\x43\x93\x1a\x10\xb2\xe5\xa6\xfa\xee\xb7\xf8\xbf\xe0\x1f\xd9\x71\xe7\x9a\xce\x58\x12\xb0\xbb\x58\xec\x2e\x76\x7f\x0b\xf4\xe4\x84\x9c\xd7\x19\x23\x39\xaf\xaf\xc9\x5a\x88\x4d\xf3\xfd\xc9\xc9\x65\x21\xd6\xdb\x55\x92\xd6\xd7\x27\xdb\xaa\xd8\x6d\x8a\xf4\x4b\xc9\x4e\xae\x9a\x5b\x7a\xf3\x24\xca\xb7\x55\x2a\x8a\xba\x8a\x46\xe4\xeb\x93\x27\x84\xd8\xdf\xe4\x13\x4b\x6b\x9e\x31\xae\x26\x08\xfc\x13\xeb\xa2\x49\xea\x2a\xab\x2b\x46\xce\x48\xb5\x2d\xcb\x25\x1e\x67\x9c\xd7\xbc\x6f\xa2\x11\x94\x8b\xee\x44\xba\xa6\x55\xc5\xca\x06\x66\x66\x68\xf8\x77\x45\xce\x32\x18\xce\x69\xd9\xb0\x70\xaa\xde\x6c\x86\xa6\x38\xa3\xd7\x68\x95\xbd\xdc\x8c\xdd\x43\xb2\xe1\xb5\xa8\xc5\xdd\x86\x25\x56\x9b\x60\xdf\x52\x4e\x91\x93\x28\xd0\xc0\x4e\xc8\x25\x78\x7d\x4b\x2a\x76\x4b\x7e\x90\x9b\x8c\x8e\xac\x5c\x72\x4b\x1b\x42\x4b\x58\x3a\xbb\x23\x86\x2d\x39\x1a\x69\xc5\xf6\xbd\x9b\x12\x7c\x6b\x14\xbf\x64\xe2\xbf\x0d\xe3\xef\x59\x56\x50\xef\x06\x30\x63\x4c\xf4\x6e\xbc\x02\x58\x37\x65\x02\x3f\x45\x08\x67\x62\xcb\xab\xa5\xf9\xbd\x47\x2c\x20\x8b\x3c\x3d\xd3\x36\xc1\x1c\x4e\x9c\xf5\x5a\x1f\x51\xe8\x58\x29\x6b\xb4\x74\x93\xfb\x7b\x56\xa7\x59\x76\x01\x9a\xbe\x67\x62\x5d\x67\x91\xd9\xce\xf2\x09\x92\xeb\x3d\xa6\xbf\xb8\x49\x7e\x87\x94\xd0\xa4\x10\x29\x59\xc9\x2e\x14\x5d\xe4\xc4\xec\x49\x4a\x45\xba\x86\x6d\x8e\x3a\x1c\x5a\x66\x22\xad\x15\x21\xb5\xdb\x61\xe4\x9d\xf1\x68\xb3\xf4\x18\x45\x7f\xee\x93\x55\x51\x65\x4a\xe0\x48\x11\xed\x97\x83\x21\x59\x6f\x86\x22\xf2\xe9\xa3\x42\xb2\xaa\xc5\x40\x38\x1e\x88\x24\xec\xc9\x7d\xef\xa9\xf3\xe6\xc2\x62\x94\x1b\xbb\xa6\xba\xa1\x9c\x38\x1f\x63\xda\xbe\x30\x68\x79\x0a\xd2\xd8\xdb\x82\xb3\xbc\xde\x91\xac\x66\x7a\x3f\x39\x0c\x00\x0f\x23\x60\xfa\x2a\x03\x7d\xd8\x0d\xab\x44\x62\x38\x1a\x26\x7e\x2e\xae\x59\xbd\x15\x51\xc7\x8e\x56\x61\xb3\x94\xe1\x0f\x9d\x1a\xce\x45\x7d\x5e\x8d\xc9\xcb\xc9\x04\x19\x73\xd0\x9f\x41\xbc\xf6\x39\x56\x9a\xe6\xd5\x36\x2b\xea\xf3\xba\x12\x6c\x27\xd3\x51\x74\x0b\xc1\x52\xdf\x26\xc1\xf0\x9f\x7f\x12\x33\x7c\xcb\x56\x5f\x0a\x81\x27\x8d\x22\x52\x54\xea\xa4\xc8\x78\xc0\x44\x11\xa2\x6a\xea\x2d\x4f\x65\xe6\x36\xe4\x49\x0a\xea\x09\xa6\xd2\x8f\x56\xf5\x42\x51\x04\x7e\x45\xfc\x50\x2d\x3e\xc8\xd2\xa2\x57\x31\x7a\xa9\x22\x92\x7c\xd6\x53\x91\x91\x1c\x87\x09\xde\xc8\xd0\xeb\x43\x15\x82\xc1\x54\x44\x46\x5c\x52\xc1\x1f\x43\x81\x87\x1c\x9d\xd5\x36\x63\x8d\x28\x2a\x2a\xed\x38\xea\x26\x7e\xeb\xb8\x3e\x6b\x0f\x52\xfa\x82\xe4\xb4\xcb\x8a\xe6\x80\x82\x2d\x15\x11\xf1\xb0\x96\x41\x5a\x51\xb5\xb3\x2f\xab\xa0\x79\xb7\x30\xa8\x04\xf9\x63\x34\x5a\x0e\xa6\x95\xd6\x59\xb4\xa5\xb6\xbb\x00\x9e\x8e\x3a\x21\xec\x4a\x7e\x50\x91\xd2\x15\x0e\xd7\xcb\xad\x8c\xe4\xa8\xa2\x37\xc5\x25\x15\x35\x4f\x30\xad\x0c\x54\x3f\xa3\x63\xf5\xc7\x70\xde\x28\xe2\xa9\xae\xeb\x3f\x7e\x1c\x14\x71\xdd\xe0\x39\xb4\xcf\xa7\xa0\x87\xdf\xd6\x7d\x87\x3e\x5d\x45\x47\xc1\x9e\x46\xa4\xd0\xc9\x84\xde\xd0\xa2\xa4\xab\x92\x25\x47\xb1\xb6\xd5\xd2\x1f\xf3\xe9\xc4\xfd\xea\xe6\x44\x50\x20\x49\x69\x59\x7a\x53\xc4\xe4\x2b\x95\x67\xee\x7b\x95\x1f\x63\x72\x53\x64\x0c\x7e\x28\x88\xb2\x8f\x8d\x20\xa7\x5f\xbb\xb4\x2b\x2d\xa5\x06\xae\xea\x7b\x4d\xda\xbc\xb2\x06\x87\x8c\x0a\x2d\x84\xfa\xab\xcf\x91\x83\x40\xce\xb9\xbd\x25\x19\x55\x9a\x23\x88\x36\x96\x17\x15\xcb\x8e\xc8\x19\x44\x90\x4c\x65\x75\x4e\x50\x7e\x46\x86\xf7\x83\xfd\x27\x4e\x07\x8d\xe0\x34\xfd\xd2\xd8\xf4\x0f\x9e\xf8\x59\x0d\xe0\xec\x9a\x43\x99\x8d\x24\x6d\x01\x64\x93\x98\x94\xac\x52\x85\x46\xd2\x25\xf0\xe3\x52\xac\x97\x30\xf7\x4f\x39\xb1\x24\xc7\xc7\x45\xab\x16\x2b\xc2\x5f\x8b\xdf\x3a\xa5\xde\xa5\x6d\x14\xed\xd2\x1e\x2a\x8a\x70\xf6\xb2\x02\xf1\x18\xa8\xf0\x75\xaf\x4d\x18\x4e\x24\xae\xcc\x9e\xb9\xcc\x0f\x67\x68\x3f\x92\x4b\x0f\x63\xe9\x9f\x00\x20\x02\x92\xbe\x29\xd8\x6d\x80\xa6\xe5\x00\x48\x92\x1f\xce\x61\x9a\x16\x95\x13\xb0\xdb\xeb\x42\x34\x1f\x19\xbf\xa0\xd7\x9b\x92\xf5\x59\x5c\xc7\xa9\x17\xaa\x8e\x67\x51\x89\xe9\x22\x7a\x31\x8f\x55\x60\x22\x0c\xd2\xb7\xc4\xb9\x87\xe3\xdf\x22\x7d\x36\x7b\x90\xf4\x37\x5b\xae\x92\xe2\x7d\xd2\x81\x54\x6f\xf2\x1c\x92\x1f\xa4\x2a\x72\xd2\x1a\xff\x04\x25\x2b\xba\x67\x31\x24\x61\xa8\xfa\xae\x36\x38\x2c\x03\xf3\x02\xdd\xd8\xcd\x58\xab\x28\x4d\x4e\x97\x07\xad\xf1\x62\x16\xcd\x27\xc6\x1a\x40\x0d\x4b\x3c\x44\x4d\xb9\xa1\x6f\xb1\x39\xac\x32\x7b\x80\x47\x21\x35\xbe\x61\x39\xdd\x96\xa2\xd7\xa3\x5e\x6c\xe3\xc4\x82\xee\x93\xdd\x7c\x01\xff\xfd\xe3\xa5\xf3\xaa\x84\x62\x9f\xde\xbd\x7d\x3b\xc8\x75\xaa\xb8\x5e\xbe\x5c\xcc\xa7\x2f\xbf\xc3\x5c\x9f\x5f\xfd\xf2\xc3\x20\xd7\x74\x26\xd9\x66\x93\xef\xe6\x8b\x6c\xb1\xc0\x6c\xcf\xf2\x6b\x41\x9e\x0d\x33\x2e\x24\xe3\x74\x82\x59\x74\x9a\x20\x90\xac\x24\xf3\x00\xaf\x8c\x55\xe0\x9a\x62\x46\x48\x3e\xd7\x54\xc6\xc8\xc7\xf3\xf7\x83\x2b\xbe\x50\x2b\x2e\xa6\xa0\xea\x74\x31\x0f\x54\xcd\xa8\xa0\xcf\x0e\xfa\xe0\x6d\xc1\xca\x2c\xf0\x40\x2a\xc3\x32\x26\x70\x1c\xa0\x54\xac\x70\xe0\xc5\xc4\x21\x26\xeb\xa5\x5a\xd0\xf2\xa2\xf8\x43\xa3\x36\x19\xce\x63\x12\x05\x3c\x32\x2a\x65\xbc\x5a\x4e\xa5\x48\xff\x3e\xa4\xea\x4e\xde\x31\x79\x11\x58\xbd\x91\x83\xd2\x80\xd2\xd7\x07\x2c\x38\xf3\x4a\x62\x76\x33\xa6\x95\x1c\xd4\x40\xc6\xad\xde\x37\x5a\x58\x6f\x43\x0e\x0f\xf3\x9d\x6a\x3e\xb4\x4f\xf8\xda\xb1\x43\xec\x3a\x48\x2b\x7c\x75\x27\x0e\x89\x96\xc9\x71\xd6\x72\x02\x5e\x43\xca\xc4\xd2\xca\x3a\xfd\x02\xdd\x7e\x71\x59\x0d\xcb\x9b\x77\x9c\x8a\x04\xc0\x04\xd9\x40\xed\xd0\x9b\x1e\xf6\xd4\x04\xb9\xaa\xd7\x4b\x61\xe0\xb9\x32\x73\xa1\x10\xe3\x6a\x9b\xe7\x8c\x07\x27\x5d\x0f\x41\x14\xe9\x2f\x18\x3f\x9b\x12\x24\x31\xfd\x1b\x90\xfa\x0b\xfc\xb4\x12\x10\xd9\x5a\xc5\xb6\xa1\x33\xd5\xcc\xf3\x7b\xb4\xa1\x34\x48\xe4\xed\xd3\x6b\xda\xb0\xc5\x1c\x47\x3e\x80\x06\x9c\x82\x39\x95\xeb\x9a\xe2\x0a\x38\x6a\xa5\x08\x7c\xbf\xe1\x74\x56\x4d\x0d\xe7\xf4\xee\xb5\x1a\x89\x80\xd1\x20\x03\x4c\x0d\xae\x6e\x0c\xb1\x34\xe3\xa9\xe2\x08\x77\x12\x62\x0d\x0d\x2b\xbc\xb0\x16\xba\x50\x02\x01\x58\x00\xa9\xa4\x81\xa0\xe0\xf2\x66\xed\x95\x88\x8a\xa0\xa1\x36\x79\x5a\xae\x1b\x98\xdf\xe7\x66\x6d\x13\x9f\x16\xe8\x0d\xe3\xf4\x92\x85\xa6\x01\x60\x1e\x13\x68\x4c\xb0\x85\xd4\xe8\xbb\x6c\x67\x2b\x15\x98\x8a\xed\xde\xd6\x5c\x62\x5e\xcd\x82\x0c\x00\xbc\x43\xa4\x52\xac\x87\xd0\x9a\xf0\xb9\x17\x0e\x58\x6f\xd2\xbe\x05\x00\xf3\xa0\x3d\x2a\x65\x54\x03\x30\x41\x5d\xa7\x07\x0c\x28\x44\xc2\xa2\xd9\x63\x77\xbb\xae\x36\xbf\x56\xa6\x65\x7a\x47\x7f\xa5\xfd\x74\x05\x84\x2e\xc1\x01\xe9\x15\xc6\x80\x52\xaf\xe3\x33\xf2\x9e\x8a\x75\x42\x57\x4d\x14\xc2\x85\xa8\x88\xc9\x55\xa7\x85\xc2\x8e\x93\xfc\x27\x24\xb2\xf2\xc7\x6d\xfb\x8c\x0e\x78\x72\xd5\x89\xf1\x00\x63\x40\x23\xc8\xef\x60\xf6\xe8\xe8\xde\x38\x45\xa7\xb4\x37\x58\x2d\x30\x56\xec\xf7\xe0\x62\xb3\x2e\x18\x05\xda\xfa\xa2\xba\x54\xc7\xf1\xdc\xc4\x6f\x64\xe3\xba\x2f\x88\xcd\x61\x5c\x89\x9a\x46\x5a\xca\x81\xcd\xa7\x3c\x04\xff\x7f\x47\x0c\x2b\x4a\x75\x39\x74\xb9\xe5\x90\x0a\xb7\xd0\xc9\x41\xa2\xa8\x52\x55\xfd\xa1\x96\xaf\x1f\x11\x9e\x2d\x3c\xe8\x09\x5b\xb0\x10\x5f\xb8\x6c\xee\x2c\xbc\x34\x3a\x3f\xf7\x81\xed\x85\xca\x82\x61\xcb\x37\x2a\x5c\x9b\xc6\x83\x49\x2b\xee\xb5\x89\x0b\xcf\x33\xf6\xcb\xf8\x8d\x9f\xab\x3b\x1b\xd8\xb4\x8c\x1f\x1d\x2f\xf7\x27\x4c\x2f\xff\x98\xcc\xe7\x68\x1f\x07\x73\xbf\x5d\xf2\x02\x62\x63\xa3\x2e\xde\xb4\x65\x1c\x77\x5f\x4d\x70\xd5\x80\x98\x69\x0c\x44\xa3\xce\x8c\x86\x47\x91\xdb\x68\xdc\x76\x01\x06\xfd\xb1\xb4\x1c\x02\x49\xc8\x2a\xc0\xaf\x34\x34\x68\x42\x96\xc7\x96\x59\x2e\xec\xed\x97\x75\xd3\xd8\x5b\x5a\x5a\x65\xb8\x42\x38\xeb\xb5\x8e\x19\x2e\xda\xa7\x51\x71\x3c\x9f\xc7\xa8\xa4\x5a\xb8\x7e\x1a\xe1\xf5\x81\xdf\x9d\xbb\x47\x56\x0f\x67\x14\x7c\xf6\x8a\x6c\xe7\x0c\xf3\x80\x9e\xbe\x45\xa9\x6c\x68\x9c\x04\x26\x2b\xb7\x0a\x64\x58\x4c\x57\x34\x64\x62\x6f\x59\xed\xd8\x59\xb7\x3e\x7c\xe3\x09\x7a\xf0\xe9\x94\xdb\x50\xb2\x41\xfd\xd3\xf0\x76\xb9\xce\x73\xb0\x3f\x88\x98\xcf\xc1\x87\x60\x83\xb1\x13\x7b\x6c\x57\x08\x2f\x72\x48\xd4\xe7\x21\x2d\x67\xf4\x7c\xb2\x3b\x9d\xc8\xce\x4d\x7e\x9a\xed\x11\x10\xc6\x02\x1d\xa6\x8b\x87\x2a\x31\x9e\x79\x35\xc6\xb3\x96\x22\xa1\x1e\xef\x14\x78\xd4\xa2\x7c\x07\x29\xf5\x98\x84\x9a\xb4\xaa\xf4\x07\xfa\xa1\x7d\x99\xd7\x8e\x17\x58\x47\xd4\x97\x3c\xbc\x88\xae\xfc\x2d\x9a\xdc\x43\xe6\xbb\xf3\x96\x37\x6c\xdf\x8e\x7d\x27\x20\x1f\x5f\x94\x85\x3a\x4d\x8e\xf3\x84\x80\x4c\x4f\xc3\x59\x23\x83\xe9\x8c\xfc\xfa\xdb\xf0\xc9\x92\x1c\xe1\x99\xd2\x6c\xc9\x66\xdb\xac\xb5\xa7\x0c\x56\x8a\x8a\xb1\x5b\x35\x26\x70\xd8\xa6\x23\x3f\x30\xea\x2b\x65\x5a\xd2\xf0\x31\xc2\xc5\x05\x5b\x46\x4a\x0d\xea\x97\x0a\xdd\x9e\x38\x0d\xae\x29\x96\x8f\x34\x25\x20\x4b\x5d\xf0\x14\x7c\xc9\xcb\xba\xe6\x91\x5d\x71\xac\x0c\x0d\x86\xb5\x22\x47\xc1\xf5\x83\xe2\xb8\x2e\xaa\x48\x7f\xa1\xbb\x48\x0b\x83\x66\x15\x32\xa5\x11\x82\xf2\xc8\x5f\xbc\xf7\x52\xf6\x83\x69\xf5\xb9\x6c\xcf\xfe\x64\x4b\x81\xfe\xf2\x80\x1b\xb1\xce\x93\x41\xba\x0e\x3a\x96\xca\x3c\x35\x84\x6f\xc6\xbf\xeb\xf4\xd8\xa0\xc0\x32\x77\xfb\xc1\x95\xcf\xa4\x3b\x65\xae\x59\x82\x19\x94\x84\x26\x3e\xd9\x84\xcf\x23\x17\x29\x2f\x36\xe2\x23\xaf\x53\xd6\x34\x35\x6f\x5d\xa9\x1b\x2d\x0f\xb2\x44\xd3\x89\x6c\x7c\xd3\xb5\xda\x63\x27\xaf\x84\xbc\xff\xa2\x37\x54\xf3\x4b\xeb\x3c\x64\xb5\x90\xe3\xc0\x62\x5e\x54\xeb\xe5\xf0\x43\x4d\xae\x40\x48\xa3\x84\x90\x8d\xd6\x1b\x70\x23\x51\xeb\xa1\x9b\xf2\xee\xbb\xb6\x7a\x06\xa9\x2b\x75\xfd\x6d\x18\xf1\x61\x52\x2f\x74\x61\xba\x2c\xaa\xcd\x56\xc1\x26\xf5\x78\xa7\x7e\xbd\x46\x3d\x69\xf0\xb2\x88\x1c\x17\xf6\x28\xbd\xae\x55\xe7\x80\xab\x22\xaa\xc4\x26\x7e\xb6\x85\xff\xf1\x22\x3e\x06\xfa\x97\x40\x31\xa2\xa5\x42\xd2\x5a\x31\xfe\x9f\xfc\xdc\xdd\xb8\x58\xd1\xbe\x96\x42\x3a\x67\xbc\x64\x90\xbc\x14\x2a\x51\xe6\xf1\xa0\x04\x27\x16\x1b\xb1\x5a\xb6\xc1\xf5\x4f\xba\x7b\xd4\x74\x00\xe9\xd1\xcf\x25\x92\x36\x88\xfd\x30\xfb\xb8\xbd\xa7\x31\x99\x8d\xb0\x94\x7b\xef\x02\x34\xd9\xce\x1f\x98\xfe\xc4\x8e\x95\x6c\xdf\xd9\xf7\x35\x77\xa1\x5a\x9d\x16\xcf\x28\xa7\x80\x49\x8f\x9f\x3d\x68\x90\x4a\x47\x57\x23\xd9\xb5\x8f\x4d\xf5\x44\x2f\x02\x1e\xb2\xe9\x72\x0b\xa9\x52\xc9\x44\x97\xa9\xf6\xdf\x4e\x9a\x7a\xd6\xf3\x98\x10\xb8\xc6\x24\x23\x5d\xae\x42\xdc\xac\xc3\x20\x27\xef\x48\x56\x57\x47\x02\xfe\x2a\x9e\x58\xc5\x03\x44\xbe\x7e\xcb\x96\x87\x6c\xa5\x9e\x48\x00\x61\xd3\x1c\x82\x06\x90\x7d\xee\x90\x7d\x63\x61\x97\x3e\x2c\xd0\xed\xb8\xd3\x32\x7c\x82\xda\xef\x83\x2a\x2e\x4d\xb6\xc5\x77\x93\x26\x9f\x77\x3a\xd7\x00\xf1\x3f\xb4\xc3\x50\xd8\xa7\x13\xaf\xe3\xd0\xaf\xe3\xd9\xff\xa7\xf5\xe8\xa9\x44\x8f\xec\x43\x3a\x3b\x88\x3b\x89\x26\x26\xf2\x06\x3a\xdc\x58\x5f\x27\x22\x6f\xb7\xc2\x36\x04\x5a\x08\x5d\xeb\x0f\x35\x1b\x61\x60\xf5\x5e\x4c\x49\x0e\xea\xa2\x20\x60\x80\xc0\xc7\xe7\x54\x59\xb5\x6d\x64\xc3\x1a\x1c\x68\x7d\xb7\x60\x66\x12\xa9\xe9\xbf\x83\x4c\xd4\x77\x66\xcd\xbd\x43\x70\x50\xc3\x96\xc8\xec\xf8\xf8\x38\xd6\x9a\x78\xc0\xdd\x73\x23\xd3\xee\x86\xba\xe0\xa3\xdb\x1a\xfd\x45\x48\xf3\xd9\xfd\x0f\x0d\xe6\x9b\x83\x2d\xff\x0b\x00\x00\xff\xff\x21\x3b\x11\xac\x46\x27\x00\x00")

func assets_jswav_js_bytes() ([]byte, error) {
	return bindata_read(
		_assets_jswav_js,
		"assets/jswav.js",
	)
}

func assets_jswav_js() (*asset, error) {
	bytes, err := assets_jswav_js_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "assets/jswav.js", size: 10054, mode: os.FileMode(420), modTime: time.Unix(1468018176, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _assets_script_js = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xec\x58\x6d\x6f\xdb\x36\x10\xfe\x9e\x5f\xc1\x7e\x92\x8c\x38\x6a\xd3\x15\x1b\x30\xcf\x28\x12\xc7\x5d\xbb\x66\x49\xe1\xa6\x40\x87\x20\x28\x68\xe9\x12\x33\x65\x44\x97\xa2\xe2\x66\x43\xfe\xfb\xf8\x22\x4a\x24\x4d\x29\x09\x50\xec\xd3\x0c\x04\xb1\xa5\xe7\x1e\xde\xfb\x9d\x94\x5e\xd6\x65\x2e\x08\x2b\xd3\x11\xfa\x67\x67\x07\xa1\x5b\xcc\xd1\xc1\x1f\x07\x9f\xbf\x1c\x9d\x9e\xcc\xd1\x14\xbd\x9a\x34\x17\xdf\x9e\x9d\x7d\xf8\x72\xfa\x5e\x5e\x7a\xf9\xe2\x85\xbd\x38\x3f\x39\x9b\x2f\xbe\xbc\x9f\xff\x35\x3b\x3d\x52\xe8\xfd\x9f\xda\x3b\x1f\x67\x07\x1f\xe6\xce\xad\x97\xbf\x4c\x2c\x3f\x2e\x8a\xc3\x5a\x08\x56\xca\xcb\x65\x4d\xa9\x95\xc9\x6b\xce\xa1\x14\x0b\xc8\x19\x2f\x80\x0f\xdd\x0d\xe4\x25\xc4\x1a\x82\x48\x49\x04\xc1\x94\xfc\x0d\xda\x26\x24\x3f\xee\x81\x05\xcb\xeb\x1b\xc9\x93\x5d\x81\x98\x53\x50\x5f\x0f\xef\xde\x15\x69\x22\x41\x7b\x4b\x8d\x4a\x46\x13\x5f\x2c\x93\xdf\xe6\xb7\x12\x79\x4c\x2a\x01\x25\xf0\x34\xc9\x29\xc9\xbf\x26\x63\x85\x39\xc6\x4b\xa0\x23\xad\x04\x42\x1b\x52\x16\x6c\x13\x11\xf8\x0a\x77\xf5\x5a\x0a\xb4\x0e\x07\xab\x1d\x42\xe4\x12\xa5\x90\x6d\x56\x24\x5f\xa1\xe9\x74\x1a\x38\xaf\xc3\x21\x04\xd9\x9a\x83\x22\x3e\x82\x4b\x5c\x53\x91\x36\xaa\xaa\x4f\x8e\xcb\x1c\xa8\xf1\x0f\x29\xaf\xba\x5b\xf7\xfa\xff\xbd\x55\x71\xd0\x03\x39\x2b\xa5\xc2\x22\x19\x3d\xd1\x84\x7e\xc5\xb6\x8c\x73\x73\xc6\xb5\xcd\xba\xb2\x57\x71\x95\x05\x26\x42\x33\x8a\xab\x0a\x2a\x19\xce\xf3\x84\x6b\x83\x6d\xe8\xc6\x28\x29\x80\x82\x00\x7b\xe1\x62\x12\xc8\x2e\xe0\x4a\x5a\xc4\x31\xd7\xe2\x5c\xff\x02\xee\xa6\xd5\x18\xd9\xab\x47\x9a\xca\x5c\x6d\x88\x2e\x19\x47\xa9\x62\x23\x52\xfc\xc5\x18\x51\x50\x59\xe5\xa9\x95\xc9\x6b\x57\x62\x35\x91\x90\xdf\xd4\xfd\x09\xda\xdd\x25\x9d\xa5\x3a\x99\x15\xf2\x04\xdf\x40\x28\x7b\x4e\x2e\x26\x0e\x4e\x2a\xd2\x22\x3a\xc5\x03\x90\xb9\x5d\xc5\x93\xbb\x3a\xbc\x9b\xd9\xc3\xd2\xf6\xd8\xd6\xc5\xad\x39\xd7\xad\x39\xfb\xed\x89\x9d\x25\xd7\xc6\x92\x7d\x65\xca\xb5\x1b\x34\xa9\x60\xda\x80\xcf\xaf\x2f\xc2\xc8\xed\xa8\x3f\xb7\x38\xbb\x18\x37\x1c\x3d\x49\xab\x34\xa2\x0a\xf8\x86\x00\x2d\x1e\x2a\xdb\x36\x69\x03\x61\x29\xd7\x91\x64\xb7\x98\xd6\xd0\x21\xa4\xe0\xa7\xc5\xb1\x84\x24\xcf\xe5\xd7\xd7\x1a\x38\x4d\xd0\x2e\x82\x32\x67\x05\x7c\x5a\xbc\x9b\xb1\x9b\x35\x2b\x25\x71\x4a\x9b\x12\xf7\xbb\x42\x41\x2a\xbc\xa4\xa0\xd4\x13\xdc\x52\x4b\xfd\x24\x6d\x6a\xd8\xdd\x5a\xe1\x7c\x8c\x48\xd1\xf9\x2e\xca\x73\x89\x69\x05\x6e\xe5\x3c\x93\x72\xae\xbf\x7b\x8b\x1c\x6d\x99\xea\xf4\xcf\xf6\xc4\x13\xd8\x2c\xd8\x26\x25\xc5\x18\xb9\x36\xc9\x30\x21\x90\x27\x3b\x07\x55\x2b\xb6\x99\x73\xce\xb8\xd2\x3c\x52\x91\x61\x64\x7d\xbc\x6d\xbc\x14\xb8\x68\x09\xb6\x52\x61\x4b\x9b\x46\x4c\x85\x07\x4c\x90\xdd\xd0\xe7\x1c\xb0\x80\x26\xfa\x69\x22\xb8\x0d\x78\x83\xcd\x2a\x10\x07\x42\x70\x22\x13\x12\xd2\x44\x53\xee\x91\x22\xd1\x7e\x77\x7a\x88\xbe\x31\x63\x74\x88\xbb\xb0\xdc\x16\x9c\x09\xf8\x2e\x66\x26\xd1\x6c\x5e\x39\x9c\xa6\x0b\x3d\x96\xb4\x93\xd8\x9e\x4b\x81\x90\x3f\x92\x5c\xa1\xcc\x6d\x22\x41\x1b\x8c\xa0\x7d\xfd\x13\x93\x42\x1e\x50\x59\x89\xd7\x6b\x28\x8b\xd9\x8a\xd0\x22\x75\xc5\x5d\xff\x99\x06\xfb\x14\x5b\x0b\xa7\x8f\x3e\xda\x56\x57\xc8\xb7\xd5\xef\xf0\x11\x74\x60\xab\x69\xe3\x1e\x30\xb4\xd5\x15\xb7\xb6\xda\xb4\x72\x71\x36\x1d\x82\xcc\xdb\x76\xdb\x30\xa6\x55\xe2\xc1\xa1\x5c\xe1\x9b\x35\x85\x6a\x6f\xc9\x8a\x3b\x35\x95\x1d\x92\x86\xb8\x4d\x8d\xed\x49\x16\x86\xd0\xc5\xb9\xb3\x2d\x34\x3f\x56\xdc\x07\x75\x41\xd8\xbb\x52\x15\x2c\x67\x1b\xb7\x54\x89\xea\x5c\xf2\x9a\xd2\x3d\x56\x7f\x4e\x22\x30\xda\xd4\x48\x03\xef\x86\xd4\x19\xbe\xd2\x23\x4a\x67\xce\xf9\xfe\x85\x93\x6f\x25\x6c\x9e\x92\x6c\x58\x29\x2a\xe9\x06\x04\x34\xa4\x5d\xf3\x1a\x7c\xa6\xc6\x08\x67\xb4\xf2\xfa\xb9\x62\xac\x58\xcd\x73\x18\xa6\x34\x18\xcb\xd9\x4a\x64\x15\xcf\xf5\x8c\xe1\xb6\x65\x67\x1b\x7c\xfb\x9a\x14\x7d\xa3\x46\xb7\x2a\x9f\x42\xdc\xad\x75\xda\x6b\x45\x9f\x7f\xdf\x93\x04\x49\xa0\xba\x9b\x16\xad\x60\x43\x64\xdc\xe7\x41\xac\x9c\xcd\x3e\x15\x0d\x52\x56\xb2\x59\x1f\x82\xdc\x08\x20\x35\x32\xe3\x26\x5e\x36\x73\x24\x8a\xc3\x0d\xbb\x05\xc3\xe2\xdc\xf4\xd3\x25\x9a\x8a\xa6\x5a\xb7\xf2\x86\x14\x6f\x18\xf7\x21\xe6\xb4\xe5\x43\xab\xb7\xf7\xe8\xd2\x4d\xcc\x65\xa4\x05\x4c\x55\x13\x90\xfe\x4d\xbc\x51\xea\x3f\x6e\x64\x95\x60\x6b\x77\x9e\xc6\x88\x82\xbe\x69\xea\x49\xd4\xbc\xf4\x07\xe4\xc0\x9c\x8e\xb3\x6a\xe5\x2c\x24\xfe\xa4\x63\x04\xa3\x18\xf3\xac\x04\x1b\xfb\xf4\x71\x5d\xc9\x14\xc9\xec\xbd\xee\xec\xd0\x62\x26\xd1\xa5\x4a\xad\xd6\x95\x32\x77\xca\x62\xc0\x49\x5b\x3b\xc5\xd0\x53\xd9\x13\x1d\x59\xaf\x29\xc3\x45\xe7\x32\xb5\x16\x68\x7d\xc2\x2d\xaa\xc0\x02\xbb\x3a\x36\xcf\x18\xfe\xa2\xa4\x4b\x28\xba\xc3\xe8\x30\x85\xeb\x8e\x85\xfb\x5d\x6e\x2b\x35\x7d\x92\xf6\xfb\x7d\xb7\x20\xf5\xfb\x1a\x94\x26\xae\xb3\x03\x8d\x1f\xe9\xa6\x1f\x11\x91\x9e\xe5\xae\x4f\xf7\x4a\x60\xde\x3e\xd1\xc5\x96\xbf\xe8\x4c\xf9\x2f\x0a\xbe\xb7\xcc\xd4\x71\x35\xa7\xba\xf5\x9a\xe1\xf6\x98\x9e\xdb\xae\xef\x52\x74\xdc\x1b\xa8\x68\xb6\xf5\xe5\x5a\x24\xd3\x06\x76\xf8\x66\x35\x64\x1b\x33\x22\x7b\x3c\x65\x3e\xaa\x1d\xaf\xb1\x0a\x54\x33\x84\xbc\xe6\xac\x66\xb4\xa3\xc5\x8e\x9f\xa8\xd1\x20\x46\xce\x6b\xf4\x36\x3d\xce\x46\xc8\x3f\xd4\xfb\xb5\xcd\x1a\x09\xb7\x4f\x1a\x3b\x76\x70\x93\xf0\xf9\xb7\x9c\xd9\xb0\xab\x20\x85\xa5\xf2\x6c\x6a\x0a\xc1\xc9\x9f\xbe\x8e\xe8\xd6\x4b\x7f\x29\x0f\xa1\xfc\x71\x32\x5c\xb5\x91\x9a\x7d\xa0\x0f\x3c\x54\xe5\xdb\x8f\xde\x03\xed\x35\xc7\x94\x2e\x71\xfe\xd5\xad\xd5\xef\x2b\x3b\x54\x3e\xff\x79\xfc\x56\x88\xf5\x02\xbe\xd5\x50\xb5\x6d\x40\xde\x97\x8e\x90\x3b\x50\x71\x27\xdb\x83\x80\x7c\x85\xcb\x2b\x6f\x96\xf8\x63\x59\xe1\x35\xfa\xa3\x42\xeb\x91\xdc\xbe\x67\x0c\x8b\x4b\x61\x15\x69\x5d\x69\x5c\xf3\xea\x71\x14\x14\x91\xd1\x39\x55\x36\x8f\x91\xa1\xaf\x64\x41\x57\x70\x26\x3d\xf7\x50\x05\x36\xc2\x89\x2e\x59\x94\xec\x76\x47\xee\x26\xbf\x36\xbf\x5d\xbe\xb1\x49\x9c\x48\x45\x19\x77\x3b\x4e\x91\x6b\x56\x9a\x7c\x38\xfd\x78\xa6\x5e\x46\x3d\x37\x6e\xd7\xcd\x67\x37\xde\x7a\x1c\x87\x56\x72\x43\x33\x33\x38\x5b\xe2\x0a\x7e\x7e\x95\x8e\x22\x29\xdf\xf4\x28\x0e\xdf\xf4\x2b\x86\xff\xa3\xf7\xc3\xa3\xf7\xfb\x5c\x05\xcf\x38\x38\x0c\x4f\xcb\xa4\x83\xd2\xfb\xbe\x57\x45\x5d\xbd\x79\x68\xdf\x46\xab\x5d\xfb\x7e\xa4\x02\xf0\x6f\x00\x00\x00\xff\xff\x3f\xd0\x7d\x9d\x75\x17\x00\x00")

func assets_script_js_bytes() ([]byte, error) {
	return bindata_read(
		_assets_script_js,
		"assets/script.js",
	)
}

func assets_script_js() (*asset, error) {
	bytes, err := assets_script_js_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "assets/script.js", size: 6005, mode: os.FileMode(420), modTime: time.Unix(1468019907, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _assets_style_css = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x7c\x91\xd1\x6a\xf3\x30\x0c\x85\xef\xf3\x14\x86\xde\xfc\x3f\xcc\x90\x76\x1b\x0c\xf7\x69\x94\x48\x4e\x45\x1d\x39\xd8\xea\xd6\x32\xfa\xee\x73\xe2\x15\x5a\xda\x0e\xdf\x89\xf3\x1d\x1d\x1f\x75\x11\x4f\xe6\xbb\x31\x46\xe9\xa8\x16\x02\x0f\xe2\x4c\x4f\xa2\x94\xb6\x65\xea\xa3\xa8\xf5\x30\x72\x38\x39\x93\x41\xb2\xcd\x94\xd8\x6f\x9b\x73\xd3\xc0\x01\x39\x2e\x2c\x72\x9e\x02\x14\x05\x4b\x60\x21\xdb\x85\xd8\xef\x67\xfc\x8b\x51\x77\xce\x6c\xd6\xed\x74\x5c\x98\x55\x86\x71\x0a\x94\x17\xac\x8b\x09\x29\x39\x23\x51\x68\x56\x8f\x90\x06\x2e\xeb\xe1\xa0\xf1\x46\xfd\x62\x56\x80\x68\xfb\x12\x06\x8a\x7f\xba\x0b\x1c\xc8\xeb\xad\xbf\xe2\x22\x9a\x0a\xc7\x32\x38\xf3\x3e\x07\x98\x57\x1c\xed\x6f\xa8\xd7\xf6\x2e\x94\xa2\xf3\x9c\xb2\xda\x7e\xc7\xa1\x1a\x8c\x2c\x17\x60\xf3\x10\x10\xdd\x55\xf9\xbf\xcd\xff\xa7\x45\xde\x30\xe9\x8a\xa1\x4f\x92\x8a\x75\xd0\xef\x87\x14\x0f\x32\xff\x33\xc4\x52\xcb\x8a\xd0\xaf\xfd\xc7\x1f\x74\x44\x7c\x0a\x23\xd0\x9b\x6f\x2b\x7c\x5f\x5e\xad\xda\x6a\x9c\x9c\xa9\xc7\xb9\xea\xea\x32\x78\xe0\xea\xdb\xf9\x6d\x9f\xdf\xfc\xdc\xfc\x04\x00\x00\xff\xff\x95\xbf\x79\x36\x52\x02\x00\x00")

func assets_style_css_bytes() ([]byte, error) {
	return bindata_read(
		_assets_style_css,
		"assets/style.css",
	)
}

func assets_style_css() (*asset, error) {
	bytes, err := assets_style_css_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "assets/style.css", size: 594, mode: os.FileMode(420), modTime: time.Unix(1468020159, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if (err != nil) {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"assets/index.html": assets_index_html,
	"assets/jswav.js": assets_jswav_js,
	"assets/script.js": assets_script_js,
	"assets/style.css": assets_style_css,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for name := range node.Children {
		rv = append(rv, name)
	}
	return rv, nil
}

type _bintree_t struct {
	Func func() (*asset, error)
	Children map[string]*_bintree_t
}
var _bintree = &_bintree_t{nil, map[string]*_bintree_t{
	"assets": &_bintree_t{nil, map[string]*_bintree_t{
		"index.html": &_bintree_t{assets_index_html, map[string]*_bintree_t{
		}},
		"jswav.js": &_bintree_t{assets_jswav_js, map[string]*_bintree_t{
		}},
		"script.js": &_bintree_t{assets_script_js, map[string]*_bintree_t{
		}},
		"style.css": &_bintree_t{assets_style_css, map[string]*_bintree_t{
		}},
	}},
}}

// Restore an asset under the given directory
func RestoreAsset(dir, name string) error {
        data, err := Asset(name)
        if err != nil {
                return err
        }
        info, err := AssetInfo(name)
        if err != nil {
                return err
        }
        err = os.MkdirAll(_filePath(dir, path.Dir(name)), os.FileMode(0755))
        if err != nil {
                return err
        }
        err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
        if err != nil {
                return err
        }
        err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
        if err != nil {
                return err
        }
        return nil
}

// Restore assets under the given directory recursively
func RestoreAssets(dir, name string) error {
        children, err := AssetDir(name)
        if err != nil { // File
                return RestoreAsset(dir, name)
        } else { // Dir
                for _, child := range children {
                        err = RestoreAssets(dir, path.Join(name, child))
                        if err != nil {
                                return err
                        }
                }
        }
        return nil
}

func _filePath(dir, name string) string {
        cannonicalName := strings.Replace(name, "\\", "/", -1)
        return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

